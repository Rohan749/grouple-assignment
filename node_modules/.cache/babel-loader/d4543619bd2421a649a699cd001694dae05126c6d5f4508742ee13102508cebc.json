{"ast":null,"code":"var _jsxFileName = \"/home/aaruni/Desktop/grouple-assignment/weather-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeLocation from \"./components/TimeLocation\";\nimport TempAndDetails from \"./components/TempAndDetails\";\nimport Forcast from \"./components/Forcast\";\nimport getFormattedWeatherData from \"./services/services\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchedWeather = async () => {\n      const message = query.q ? query.q : 'Current location.';\n      toast.info('Fetching weather for ' + message);\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n        toast.success(`Successfully fetched weather for `);\n      });\n    };\n    fetchedWeather();\n  }, [query, units]);\n  const backgroundChanger = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n    return \"from-yellow-700 to-orange-700\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md \n    mt-4 py-5 px-32 bg-gradient-to-br h-fit shadow-xl \n    shadow-gray-400 ${backgroundChanger()}`,\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TempAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forcast, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      theme: \"dark\",\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gM9ltGbVXP1eDM0tSzoINkjwl+Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeLocation","TempAndDetails","Forcast","getFormattedWeatherData","useEffect","useState","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","query","setQuery","q","units","setUnits","weather","setWeather","fetchedWeather","message","info","then","data","success","backgroundChanger","threshold","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","theme","pauseOnHover","_c","$RefreshReg$"],"sources":["/home/aaruni/Desktop/grouple-assignment/weather-assignment/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeLocation from \"./components/TimeLocation\";\nimport TempAndDetails from \"./components/TempAndDetails\";\nimport Forcast from \"./components/Forcast\";\nimport getFormattedWeatherData from \"./services/services\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchedWeather = async () => {\n\n      const message = query.q ? query.q : 'Current location.'\n\n      toast.info('Fetching weather for ' + message)\n\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        setWeather(data);\n        \n        toast.success(`Successfully fetched weather for `)\n      });\n    };\n\n    fetchedWeather();\n  }, [query, units]);\n\n  const backgroundChanger = () => {\n    if(!weather) return \"from-cyan-700 to-blue-700\";\n\n    const threshold = units === \"metric\" ? 20 : 60;\n\n    if(weather.temp <= threshold) \n    return \"from-cyan-700 to-blue-700\";\n\n    return \"from-yellow-700 to-orange-700\";\n  }\n\n  return (\n    <div className={`mx-auto max-w-screen-md \n    mt-4 py-5 px-32 bg-gradient-to-br h-fit shadow-xl \n    shadow-gray-400 ${backgroundChanger()}`}>\n      <TopButtons setQuery={setQuery}/>\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits}/>\n      {weather && (\n        <div>\n          <TimeLocation weather={weather} />\n          <TempAndDetails weather={weather} />\n          <Forcast weather={weather} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme=\"dark\" pauseOnHover/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}