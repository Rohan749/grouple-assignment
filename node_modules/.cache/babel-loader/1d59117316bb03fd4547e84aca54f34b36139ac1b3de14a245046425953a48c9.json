{"ast":null,"code":"import _regeneratorRuntime from\"/home/aaruni/Desktop/grouple-assignment/weather-assignment/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/aaruni/Desktop/grouple-assignment/weather-assignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/home/aaruni/Desktop/grouple-assignment/weather-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _ref,_ref2;import{DateTime}from\"luxon\";import{useState}from\"react\";var API_KEY=\"7810862358638f2199f060783ceacbf6\";var BASE_URL=\"https://api.openweathermap.org/data/2.5\";var flag=true;var getWeatherData=function getWeatherData(infoType,searchParams){var url=new URL(BASE_URL+\"/\"+infoType);url.search=new URLSearchParams(_objectSpread(_objectSpread({},searchParams),{},{appid:API_KEY}));return fetch(url).then(function(res){return res.json();}).catch(function(error){return console.warn(\"Error occurred:\",error);});};var weatherFormat=function weatherFormat(data,units){var tempFormat;if(units===\"metric\")tempFormat=\"C\";else tempFormat=\"F\";var _data$coord=data.coord,lat=_data$coord.lat,lon=_data$coord.lon,_data$main=data.main,temp=_data$main.temp,feels_like=_data$main.feels_like,temp_min=_data$main.temp_min,temp_max=_data$main.temp_max,pressure=_data$main.pressure,humidity=_data$main.humidity,speed=data.wind.speed,dt=data.dt,name=data.name,cod=data.cod,_data$sys=data.sys,country=_data$sys.country,sunrise=_data$sys.sunrise,sunset=_data$sys.sunset;var _data$weather$=data.weather[0],details=_data$weather$.main,icon=_data$weather$.icon;return{lat:lat,lon:lon,temp:temp,feels_like:feels_like,temp_min:temp_min,temp_max:temp_max,pressure:pressure,humidity:humidity,speed:speed,dt:dt,name:name,cod:cod,country:country,sunrise:sunrise,sunset:sunset,details:details,icon:icon,tempFormat:tempFormat};};var forecastFormat=function forecastFormat(_x){return(_ref=_ref||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){var timezone,list;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:timezone=data.timezone,list=data.list;list=list.filter(function(obj,index){var datePart=obj.dt_txt.split(\" \")[0];return list.findIndex(function(o){return o.dt_txt.split(\" \")[0]===datePart;})===index;}).slice(1,4).map(function(d){return{title:formatToLocalTime(d.dt,timezone,'ccc'),temp:d.main.temp,icon:d.weather[0].icon,min_temp:d.main.temp_min,max_temp:d.main.temp_max};});return _context.abrupt(\"return\",{timezone:timezone,list:list});case 3:case\"end\":return _context.stop();}},_callee);}))).apply(this,arguments);};var getFormattedWeatherData=function getFormattedWeatherData(_x2){return(_ref2=_ref2||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(searchParams){var formattedData,lat,lon,formattedForcast;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getWeatherData(\"weather\",searchParams).then(function(data){return weatherFormat(data,searchParams.units);});case 2:formattedData=_context2.sent;lat=formattedData.lat,lon=formattedData.lon;_context2.next=6;return getWeatherData(\"forecast\",{lat:lat,lon:lon,exclude:\"current, minutely, alerts\",units:searchParams.units}).then(forecastFormat);case 6:formattedForcast=_context2.sent;return _context2.abrupt(\"return\",_objectSpread(_objectSpread({},formattedData),formattedForcast));case 8:case\"end\":return _context2.stop();}},_callee2);}))).apply(this,arguments);};var formatToLocalTime=function formatToLocalTime(secs,zone){var format=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"cccc, dd, LLL, yyyy' | Local time: 'hh:mm a\";return DateTime.fromSeconds(secs).setZone(zone).toFormat(format);};var urlIconCreator=function urlIconCreator(code){return\"http://openweathermap.org/img/wn/\".concat(code,\"@2x.png\");};export default getFormattedWeatherData;export{formatToLocalTime,urlIconCreator,flag};","map":{"version":3,"names":["DateTime","useState","API_KEY","BASE_URL","flag","getWeatherData","infoType","searchParams","url","URL","search","URLSearchParams","_objectSpread","appid","fetch","then","res","json","catch","error","console","warn","weatherFormat","data","units","tempFormat","_data$coord","coord","lat","lon","_data$main","main","temp","feels_like","temp_min","temp_max","pressure","humidity","speed","wind","dt","name","cod","_data$sys","sys","country","sunrise","sunset","_data$weather$","weather","details","icon","forecastFormat","_x","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","timezone","list","wrap","_callee$","_context","prev","next","filter","obj","index","datePart","dt_txt","split","findIndex","o","slice","map","d","title","formatToLocalTime","min_temp","max_temp","abrupt","stop","apply","arguments","getFormattedWeatherData","_x2","_ref2","_callee2","formattedData","formattedForcast","_callee2$","_context2","sent","exclude","secs","zone","format","length","undefined","fromSeconds","setZone","toFormat","urlIconCreator","code","concat"],"sources":["/home/aaruni/Desktop/grouple-assignment/weather-assignment/src/services/services.js"],"sourcesContent":["import { DateTime } from \"luxon\";\nimport { useState } from \"react\";\n\nconst API_KEY = \"7810862358638f2199f060783ceacbf6\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\nlet flag = true;\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + \"/\" + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n  return fetch(url).then((res) => res.json()).catch((error) => console.warn(\"Error occurred:\", error));\n};\n\nconst weatherFormat = (data, units) => {\n\n  let tempFormat;\n  if(units === \"metric\") tempFormat = \"C\"\n  else tempFormat = \"F\"\n\n  const {\n    coord: { lat, lon },\n    main: { temp, feels_like, temp_min, temp_max, pressure, humidity },\n    wind: { speed },\n    dt,\n    name,\n    cod,\n    sys: { country, sunrise, sunset },\n  } = data;\n\n\n  const { main: details, icon } = data.weather[0];\n\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    pressure,\n    humidity,\n    speed,\n    dt,\n    name,\n    cod,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    tempFormat\n  };\n};\n\nconst forecastFormat = async (data) => {\n  let { timezone, list } = data;\n\n  list = list.filter((obj, index) => {\n    const datePart = obj.dt_txt.split(\" \")[0];\n    return list.findIndex((o) => o.dt_txt.split(\" \")[0] === datePart) === index;\n  }).slice(1, 4).map(d => {\n        return {\n            title: formatToLocalTime(d.dt, timezone, 'ccc'),\n            temp: d.main.temp,\n            icon: d.weather[0].icon,\n            min_temp: d.main.temp_min,\n            max_temp: d.main.temp_max\n        }\n      });\n\n\n  return { timezone, list }\n};\n\nconst getFormattedWeatherData = async (searchParams) => {\n\n\n  const formattedData = await getWeatherData(\"weather\", searchParams).then(\n    (data) => weatherFormat(data, searchParams.units)\n  )\n\n  const { lat, lon } = formattedData;\n\n  const formattedForcast = await getWeatherData(\"forecast\", {\n    lat,\n    lon,\n    exclude: \"current, minutely, alerts\",\n    units: searchParams.units,\n  }).then(forecastFormat);\n\n  return {...formattedData, ...formattedForcast};\n};\n\nconst formatToLocalTime = (\n  secs,\n  zone,\n  format = \"cccc, dd, LLL, yyyy' | Local time: 'hh:mm a\"\n) => DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\nconst urlIconCreator = (code) => `http://openweathermap.org/img/wn/${code}@2x.png`\n\nexport default getFormattedWeatherData;\n\nexport { formatToLocalTime, urlIconCreator, flag }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}