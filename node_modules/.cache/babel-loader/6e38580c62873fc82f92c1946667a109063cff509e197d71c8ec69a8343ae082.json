{"ast":null,"code":"const API_KEY = \"7810862358638f2199f060783ceacbf6\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + '/' + infoType);\n  url.search = new URLSearchParams({\n    ...searchParams,\n    appid: API_KEY\n  });\n  return fetch(url).then(res => res.json());\n};\nconst weatherFormat = data => {\n  const {\n    coord: {\n      lat,\n      lon\n    },\n    main: {\n      temp,\n      feels_like,\n      temp_min,\n      temp_max,\n      pressure,\n      humidity\n    },\n    wind: {\n      speed\n    },\n    dt,\n    name,\n    cod,\n    sys: {\n      country,\n      sunrise,\n      sunset\n    }\n  } = data;\n  const {\n    main: details,\n    icon\n  } = data.weather[0];\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    pressure,\n    humidity,\n    speed,\n    dt,\n    name,\n    cod,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon\n  };\n};\nconst getFormattedWeatherData = async searchParams => {\n  const formattedData = await getWeatherData('weather', searchParams).then(weatherFormat);\n  const {\n    lat,\n    lon\n  } = formattedData;\n  const formattedForcastWeather = await getWeatherData('forecast');\n  return formattedData;\n};\nexport default getFormattedWeatherData;","map":{"version":3,"names":["API_KEY","BASE_URL","getWeatherData","infoType","searchParams","url","URL","search","URLSearchParams","appid","fetch","then","res","json","weatherFormat","data","coord","lat","lon","main","temp","feels_like","temp_min","temp_max","pressure","humidity","wind","speed","dt","name","cod","sys","country","sunrise","sunset","details","icon","weather","getFormattedWeatherData","formattedData","formattedForcastWeather"],"sources":["/home/aaruni/Desktop/grouple-assignment/weather-assignment/src/services/services.js"],"sourcesContent":["const API_KEY = \"7810862358638f2199f060783ceacbf6\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + '/' + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n  return fetch(url)\n  .then((res) => res.json())\n};\n\nconst weatherFormat = (data) => {\n    const {\n        coord: {lat, lon},\n        main: {\n            temp, feels_like, temp_min, temp_max, pressure, humidity\n        },\n        wind: {speed},\n        dt,\n        name,\n        cod,\n        sys: {\n            country,\n            sunrise,\n            sunset\n        }\n    } = data;\n\n    const { main: details, icon} = data.weather[0]\n\n    return {\n        lat, lon, temp, feels_like, temp_min, temp_max,\n        pressure, humidity, speed, dt, name, cod, country, \n        sunrise, sunset, details, icon\n    }\n}\n\nconst getFormattedWeatherData = async (searchParams) => {\n    const formattedData = await getWeatherData('weather',\n    searchParams).then(weatherFormat)\n\n    const {lat, lon} = formattedData\n\n    const formattedForcastWeather = await getWeatherData('forecast')\n\n    return formattedData\n}\n\nexport default getFormattedWeatherData"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,yCAAyC;AAE1D,MAAMC,cAAc,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK;EACjD,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACL,QAAQ,GAAG,GAAG,GAAGE,QAAQ,CAAC;EAC9CE,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAAC;IAAE,GAAGJ,YAAY;IAAEK,KAAK,EAAET;EAAQ,CAAC,CAAC;EAErE,OAAOU,KAAK,CAACL,GAAG,CAAC,CAChBM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;AAC5B,CAAC;AAED,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC5B,MAAM;IACFC,KAAK,EAAE;MAACC,GAAG;MAAEC;IAAG,CAAC;IACjBC,IAAI,EAAE;MACFC,IAAI;MAAEC,UAAU;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IACpD,CAAC;IACDC,IAAI,EAAE;MAACC;IAAK,CAAC;IACbC,EAAE;IACFC,IAAI;IACJC,GAAG;IACHC,GAAG,EAAE;MACDC,OAAO;MACPC,OAAO;MACPC;IACJ;EACJ,CAAC,GAAGnB,IAAI;EAER,MAAM;IAAEI,IAAI,EAAEgB,OAAO;IAAEC;EAAI,CAAC,GAAGrB,IAAI,CAACsB,OAAO,CAAC,CAAC,CAAC;EAE9C,OAAO;IACHpB,GAAG;IAAEC,GAAG;IAAEE,IAAI;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,QAAQ;IAC9CC,QAAQ;IAAEC,QAAQ;IAAEE,KAAK;IAAEC,EAAE;IAAEC,IAAI;IAAEC,GAAG;IAAEE,OAAO;IACjDC,OAAO;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAC9B,CAAC;AACL,CAAC;AAED,MAAME,uBAAuB,GAAG,MAAOlC,YAAY,IAAK;EACpD,MAAMmC,aAAa,GAAG,MAAMrC,cAAc,CAAC,SAAS,EACpDE,YAAY,CAAC,CAACO,IAAI,CAACG,aAAa,CAAC;EAEjC,MAAM;IAACG,GAAG;IAAEC;EAAG,CAAC,GAAGqB,aAAa;EAEhC,MAAMC,uBAAuB,GAAG,MAAMtC,cAAc,CAAC,UAAU,CAAC;EAEhE,OAAOqC,aAAa;AACxB,CAAC;AAED,eAAeD,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}