{"ast":null,"code":"var _jsxFileName = \"/home/aaruni/Desktop/grouple-assignment/weather-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeLocation from \"./components/TimeLocation\";\nimport TempAndDetails from \"./components/TempAndDetails\";\nimport Forcast from \"./components/Forcast\";\nimport getFormattedWeatherData from \"./services/services\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchedWeather = async () => {\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n        console.log(data);\n      });\n    };\n    fetchedWeather();\n  }, [query, units]);\n  const backgroundChanger = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n    return \"from-yellow-700 to-orange-700\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md \n    mt-4 py-5 px-32 bg-gradient-to-br h-fit shadow-xl \n    shadow-gray-400 ${backgroundChanger()}`,\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TempAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forcast, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gM9ltGbVXP1eDM0tSzoINkjwl+Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeLocation","TempAndDetails","Forcast","getFormattedWeatherData","useEffect","useState","jsxDEV","_jsxDEV","App","_s","query","setQuery","q","units","setUnits","weather","setWeather","fetchedWeather","then","data","console","log","backgroundChanger","threshold","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aaruni/Desktop/grouple-assignment/weather-assignment/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeLocation from \"./components/TimeLocation\";\nimport TempAndDetails from \"./components/TempAndDetails\";\nimport Forcast from \"./components/Forcast\";\nimport getFormattedWeatherData from \"./services/services\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchedWeather = async () => {\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        setWeather(data);\n        console.log(data)\n      });\n    };\n\n    fetchedWeather();\n  }, [query, units]);\n\n  const backgroundChanger = () => {\n    if(!weather) return \"from-cyan-700 to-blue-700\";\n\n    const threshold = units === \"metric\" ? 20 : 60;\n\n    if(weather.temp <= threshold) \n    return \"from-cyan-700 to-blue-700\";\n\n    return \"from-yellow-700 to-orange-700\";\n  }\n\n  return (\n    <div className={`mx-auto max-w-screen-md \n    mt-4 py-5 px-32 bg-gradient-to-br h-fit shadow-xl \n    shadow-gray-400 ${backgroundChanger()}`}>\n      <TopButtons setQuery={setQuery}/>\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits}/>\n      {weather && (\n        <div>\n          <TimeLocation weather={weather} />\n          <TempAndDetails weather={weather} />\n          <Forcast weather={weather} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,0CAA0C;AAC/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,uBAAuB,MAAM,qBAAqB;AACzD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAAEO,CAAC,EAAE;EAAS,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMd,uBAAuB,CAAC;QAAE,GAAGO,KAAK;QAAEG;MAAM,CAAC,CAAC,CAACK,IAAI,CAAEC,IAAI,IAAK;QAChEH,UAAU,CAACG,IAAI,CAAC;QAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC;IAEDF,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,KAAK,EAAEG,KAAK,CAAC,CAAC;EAElB,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAG,CAACP,OAAO,EAAE,OAAO,2BAA2B;IAE/C,MAAMQ,SAAS,GAAGV,KAAK,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE;IAE9C,IAAGE,OAAO,CAACS,IAAI,IAAID,SAAS,EAC5B,OAAO,2BAA2B;IAElC,OAAO,+BAA+B;EACxC,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAG;AACrB;AACA,sBAAsBH,iBAAiB,CAAC,CAAE,EAAE;IAAAI,QAAA,gBACtCnB,OAAA,CAACT,UAAU;MAACa,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjCvB,OAAA,CAACR,MAAM;MAACY,QAAQ,EAAEA,QAAS;MAACE,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC9Df,OAAO,iBACNR,OAAA;MAAAmB,QAAA,gBACEnB,OAAA,CAACP,YAAY;QAACe,OAAO,EAAEA;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCvB,OAAA,CAACN,cAAc;QAACc,OAAO,EAAEA;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCvB,OAAA,CAACL,OAAO;QAACa,OAAO,EAAEA;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CA1CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}